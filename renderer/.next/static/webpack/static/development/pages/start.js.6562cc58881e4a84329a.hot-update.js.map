{"version":3,"file":"static/webpack/static\\development\\pages\\start.js.6562cc58881e4a84329a.hot-update.js","sources":["webpack:///./pages/start.js"],"sourcesContent":["import { Component } from 'react'\r\n\r\nexport default class extends Component {\r\n  state = {\r\n    input: '',\r\n    message: null\r\n  }\r\n\r\n  componentDidMount () {\r\n    // start listening the channel message\r\n    global.ipcRenderer.on('message', this.handleMessage)\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    // stop listening the channel message\r\n    global.ipcRenderer.removeListener('message', this.handleMessage)\r\n  }\r\n\r\n  handleMessage = (event, message) => {\r\n    // receive a message from the main process and save it in the local state\r\n    this.setState({ message })\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ input: event.target.value })\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault()\r\n    global.ipcRenderer.send('message', this.state.input)\r\n    this.setState({ message: null })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <h1>Hello Electron!</h1>\r\n        <img src='/static/manasymbols/UB.svg' alt=\"static test\"/>\r\n        {this.state.message && <p>{this.state.message}</p>}\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <input type='text' onChange={this.handleChange} />\r\n        </form>\r\n\r\n        <style jsx>{`\r\n          h1 {\r\n            color: red;\r\n            font-size: 50px;\r\n          }\r\n        `}</style>\r\n      </div>\r\n    )\r\n  }\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAcA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAxBA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAiBA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AAAA;AAiBA;;;;AAlDA;AACA;;;;;;A","sourceRoot":""}